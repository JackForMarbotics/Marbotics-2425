package teamcode2425;

import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;

@Autonomous(name = "Marbotix", group = "Auto")
public class Marbotix extends LinearOpMode {
    DcMotor leftFrontMotor;
    DcMotor rightFrontMotor;
    DcMotor leftRearMotor;
    DcMotor rightRearMotor;

    double turnPower = 0.92;

    public void stopMotors() {
        leftFrontMotor.setPower(0);
        rightFrontMotor.setPower(0);
        leftRearMotor.setPower(0);
        rightRearMotor.setPower(0);
    }
        //forward command, for a set amount of milliseconds.
    public void moveFwd(int time) {
        leftFrontMotor.setPower(0.75);
        rightFrontMotor.setPower(0.75);
        leftRearMotor.setPower(0.75);
        rightRearMotor.setPower(0.75);

        sleep(time);

        stopMotors();
    }
        //Backward command, for a set amount of milliseconds.
    public void moveBack(int time) {
        leftFrontMotor.setPower(-0.75);
        rightFrontMotor.setPower(-0.75);
        leftRearMotor.setPower(-0.75);
        rightRearMotor.setPower(-0.75);

        sleep(time);

        stopMotors();
    }
        //Turn Left command, for a set amount of milliseconds. set to 500ms for right angle turn
    public void turnLeft(int time) {
        leftFrontMotor.setPower(turnPower);
        rightFrontMotor.setPower(-turnPower);
        leftRearMotor.setPower(turnPower);
        rightRearMotor.setPower(-turnPower);

        sleep(time);

        stopMotors();
    }
        //Turn right command, for a set amount of milliseconds. set to 500ms for right angle turn
    public void turnRight(int time) {
        leftFrontMotor.setPower(-turnPower);
        rightFrontMotor.setPower(turnPower);
        leftRearMotor.setPower(-turnPower);
        rightRearMotor.setPower(turnPower);

        sleep(time);

        stopMotors();
    }
        //Robot with slide sideways (right) for a set amount of milliseconds.
    public void strafeRight(int time) {
        leftFrontMotor.setPower(0.75);
        rightFrontMotor.setPower(-0.75);
        leftRearMotor.setPower(-0.75);
        rightRearMotor.setPower(0.75);

        sleep(time);

        stopMotors();
    }
        //Robot with slide sideways (left) for a set amount of milliseconds.

    public void strafeLeft(int time) {
        leftFrontMotor.setPower(-0.75);
        rightFrontMotor.setPower(0.75);
        leftRearMotor.setPower(0.75);
        rightRearMotor.setPower(-0.75);

        sleep(time);

        stopMotors();
    }
    
    @Override
    public void runOpMode() {
        telemetry.addData("status", "ready to run");
        telemetry.update();

        leftFrontMotor = hardwareMap.dcMotor.get("left_motorFront");
        rightFrontMotor = hardwareMap.dcMotor.get("right_motorFront");
        leftRearMotor = hardwareMap.dcMotor.get("left_motorRear");
        rightRearMotor = hardwareMap.dcMotor.get("right_motorRear");

        leftFrontMotor.setDirection(DcMotorSimple.Direction.REVERSE);


        waitForStart();

        sleep(1000);

        moveFwd(750);
        strafeLeft(1100);
        sleep(500);
        moveFwd(750);
        sleep(250);
        strafeLeft(500);
        sleep(500);
        moveBack(1500);
        sleep(250);
        turnRight(500);
        sleep(500);
        moveBack(400);
        moveFwd(3750);
        sleep(250);
        turnLeft(500);
        sleep(500);
        moveBack(500);
        sleep(500);
        
    }
}

